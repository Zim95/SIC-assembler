Thu Jul  7 00:13:06 IST 2016
--------------------------------------------------------------------
- Created a file assembly.c and assembly.h for assembly algorithms and data structures.
- Modified the functions read_line() and write_line() to be use-able by pass1() and pass2() both.
- Added 3 new data structures: 
	- SIC_src_instr: Stores 'label', 'opcode', 'operand' (sread from the input source file)
	- SIC_int_instr: Stores 'address_of_instruction', 'SIC_src_instr' (to read/written from/to the intermediate file)
	- SIC_list_instr: Stores 'SIC_int_instr', 'object_code' (to be written to listing file)
- Added header file for flags: flags.h
- Added SIC_prog_info structure that holds program information like: start address and length.

Sat Jul  9 00:07:31 IST 2016
--------------------------------------------------------------------
- Arranged pass1() and pass2().
- All variables changed to the standard SIC types in pass1 and pass2.
- Added new datatype 'SIC_reg' for SIC register.

Sat Aug 20 19:56:41 IST 2016
--------------------------------------------------------------------
- Modified function read_src_line() according to TODO file.

Sun Aug 21 02:13:15 IST 2016
--------------------------------------------------------------------
- Added a new module: optab.h, optab.c, optab.tab
	- Here, optab.h and optab.c manages the initialization and processing of optab. The technique used is to initialize a runtime
	  optab structure variable that holds the valid instruction entries from the file optab.tab.
	  The runtime optab is used as hash table for performance issues.
